// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_json = require("bs-platform/lib/js/js_json.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var ReasonApollo = require("reason-apollo/src/ReasonApollo.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

function ste(prim) {
  return prim;
}

var Graphql_error = Caml_exceptions.create("Persons-ReactTemplate.GetAllPersons.Graphql_error");

var ppx_printed_query = "query getAllPersons  {\nlistPeople  {\nitems  {\nage  \nid  \nname  \n}\n}\n}";

function parse(value) {
  var match = Js_json.decodeObject(value);
  if (match) {
    var value$1 = match[0]["listPeople"];
    var match$1 = Js_json.decodeNull(value$1);
    var tmp;
    if (match$1) {
      tmp = /* None */0;
    } else {
      var match$2 = Js_json.decodeObject(value$1);
      var tmp$1;
      if (match$2) {
        var value$2 = match$2[0]["items"];
        var match$3 = Js_json.decodeNull(value$2);
        var tmp$2;
        if (match$3) {
          tmp$2 = /* None */0;
        } else {
          var match$4 = Js_json.decodeArray(value$2);
          var tmp$3;
          if (match$4) {
            tmp$3 = match$4[0].map((function (value) {
                    var match = Js_json.decodeNull(value);
                    if (match) {
                      return /* None */0;
                    } else {
                      var match$1 = Js_json.decodeObject(value);
                      var tmp;
                      if (match$1) {
                        var value$1 = match$1[0];
                        var value$2 = value$1["age"];
                        var match$2 = Js_json.decodeNumber(value$2);
                        var tmp$1;
                        if (match$2) {
                          tmp$1 = match$2[0] | 0;
                        } else {
                          throw Graphql_error;
                        }
                        var value$3 = value$1["id"];
                        var match$3 = Js_json.decodeString(value$3);
                        var tmp$2;
                        if (match$3) {
                          tmp$2 = match$3[0];
                        } else {
                          throw Graphql_error;
                        }
                        var value$4 = value$1["name"];
                        var match$4 = Js_json.decodeString(value$4);
                        var tmp$3;
                        if (match$4) {
                          tmp$3 = match$4[0];
                        } else {
                          throw Graphql_error;
                        }
                        tmp = {
                          age: tmp$1,
                          id: tmp$2,
                          name: tmp$3
                        };
                      } else {
                        throw Graphql_error;
                      }
                      return /* Some */[tmp];
                    }
                  }));
          } else {
            throw Graphql_error;
          }
          tmp$2 = /* Some */[tmp$3];
        }
        tmp$1 = {
          items: tmp$2
        };
      } else {
        throw Graphql_error;
      }
      tmp = /* Some */[tmp$1];
    }
    return {
            listPeople: tmp
          };
  } else {
    throw Graphql_error;
  }
}

function make() {
  return {
          query: ppx_printed_query,
          variables: null,
          parse: parse
        };
}

function makeWithVariables() {
  return {
          query: ppx_printed_query,
          variables: null,
          parse: parse
        };
}

function ret_type() {
  return /* module */[];
}

var MT_Ret = /* module */[];

var GetAllPersons = /* module */[
  /* Graphql_error */Graphql_error,
  /* ppx_printed_query */ppx_printed_query,
  /* query */ppx_printed_query,
  /* parse */parse,
  /* make */make,
  /* makeWithVariables */makeWithVariables,
  /* ret_type */ret_type,
  /* MT_Ret */MT_Ret
];

var GetAllPersonsQuery = ReasonApollo.CreateQuery([
      ppx_printed_query,
      parse
    ]);

var component = ReasonReact.statelessComponent("Query");

function $pipe$unknown$great(fn, opt) {
  if (opt) {
    return Curry._1(fn, opt[0]);
  } else {
    return /* None */0;
  }
}

function $pipe$unknown$great$great(fn, opt) {
  if (opt) {
    return /* Some */[Curry._1(fn, opt[0])];
  } else {
    return /* None */0;
  }
}

function $pipe$unknown(opt, $$default) {
  if (opt) {
    return opt[0];
  } else {
    return $$default;
  }
}

function renderName(node) {
  var match = node.name;
  if (match) {
    return match[0] + "ðŸ˜­";
  } else {
    return React.createElement("li", undefined, "No name");
  }
}

function renderId(node) {
  var match = node.id;
  if (match) {
    return match[0] + "ðŸ˜­";
  } else {
    return React.createElement("li", undefined, "No id");
  }
}

function renderAge(node) {
  var match = node.age;
  if (match) {
    return String(match[0]) + "ðŸ˜­";
  } else {
    return React.createElement("li", undefined, "No id");
  }
}

function renderItem(item) {
  return item.name + "ðŸŒŸ";
}

function renderItemDetails(item) {
  return React.createElement("div", undefined, React.createElement("h2", undefined, $pipe$unknown(item.name, "No name")), React.createElement("h3", undefined, $pipe$unknown(item.id, "No Id")), React.createElement("h3", undefined, $pipe$unknown(item.age, "No age")));
}

function renderPersonList(personList) {
  if (personList) {
    var match = personList[0].items;
    if (match) {
      return React.createElement("ul", undefined, ReasonReact.createDomElement("div", {
                      className: "whatever"
                    }, $$Array.map((function (item) {
                            if (item) {
                              var item$1 = item[0];
                              return React.createElement("li", undefined, item$1 ? renderItemDetails(item$1[0]) : "No item");
                            } else {
                              return React.createElement("li", undefined, "No item");
                            }
                          }), match[0])));
    } else {
      return React.createElement("div", undefined, "No items");
    }
  } else {
    return React.createElement("div", undefined, "No persons");
  }
}

function make$1() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(/* None */0, /* None */0, Curry.app(GetAllPersonsQuery[/* make */3], [
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              (function (param) {
                                  var result = param[/* result */0];
                                  var tmp;
                                  if (typeof result === "number") {
                                    tmp = "Loading";
                                  } else if (result.tag) {
                                    console.log(result[0].listPeople);
                                    tmp = React.createElement("div", undefined, React.createElement("h1", undefined, "TEST"));
                                  } else {
                                    console.log(result[0]);
                                    tmp = "Something Went Wrong";
                                  }
                                  return React.createElement("div", undefined, React.createElement("h1", undefined, "Persons: "), tmp);
                                })
                            ]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.ste = ste;
exports.GetAllPersons = GetAllPersons;
exports.GetAllPersonsQuery = GetAllPersonsQuery;
exports.component = component;
exports.$pipe$unknown$great = $pipe$unknown$great;
exports.$pipe$unknown$great$great = $pipe$unknown$great$great;
exports.$pipe$unknown = $pipe$unknown;
exports.renderName = renderName;
exports.renderId = renderId;
exports.renderAge = renderAge;
exports.renderItem = renderItem;
exports.renderItemDetails = renderItemDetails;
exports.renderPersonList = renderPersonList;
exports.make = make$1;
/* GetAllPersonsQuery Not a pure module */
