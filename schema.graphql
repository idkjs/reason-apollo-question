type Mutation {
  createPerson(input: CreatePersonInput!): Person
  deletePerson(input: DeletePersonInput!): Person
  updatePerson(input: UpdatePersonInput!): Person
}

type Person {
  age: Int!
  id: ID!
  name: String!
}

type PersonConnection {
  items: [Person]
  nextToken: String
}

type Query {
  getPerson(id: ID!): Person
  listPeople(after: String, first: Int): PersonConnection
  person(id: ID!): Person
}

type Subscription {
  onCreatePerson(age: Int, id: ID, name: String): Person
    @aws_subscribe(mutations:["createPerson"])
  onDeletePerson(age: Int, id: ID, name: String): Person
    @aws_subscribe(mutations:["deletePerson"])
  onUpdatePerson(age: Int, id: ID, name: String): Person
    @aws_subscribe(mutations:["updatePerson"])
}

input CreatePersonInput {
  age: Int!
  id: ID!
  name: String!
}

input DeletePersonInput {
  id: ID!
}

input UpdatePersonInput {
  age: Int
  id: ID!
  name: String
}
